{% extends 'base.html.twig' %}
{% block head %}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>
{% endblock %}
{% block title %}
    {{ parent() }} | Ajouter une sortie
{% endblock %}

{% block body %}
    <div class="ShowUser">
        <div class="infos">
            {{ form_start(sortieForm, {'attr': {'id': 'sortieForm'}}) }}
            {{ form_widget(sortieForm) }}
            <div id="codePost">Code postal :</div>
            <div id="rueInput">Rue :</div>

            <div hidden id="latitude">Latitude :</div>
            <div hidden id="longitude">Longitude :</div>
            <div class="untest">
                <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#modalLieu">
                    Ajouter un lieu
                </button>
                <button type="submit"
                        class="btn btn-primary">{% block buttonLabel %}Ajouter une sortie{% endblock %}</button>
            </div>
            {{ form_end(sortieForm) }}


            <div class="modal fade" id="modalLieu" tabindex="-1" aria-labelledby="modalLieuLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="modalLieuLabel">Ajouter un lieu</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            {{ form_start(lieuForm) }}
                            {{ form_row(lieuForm.nom) }}
                            {{ form_row(lieuForm.rue, {'attr': {'id': 'rueInput', 'longitude': 'longitude', 'latitude': 'latitude'}}) }}

                            <button class="btn btn-primary">{% block lieuButtonLabel %}Ajouter un lieu{% endblock %}</button>
                            {{ form_end(lieuForm) }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="map">

        </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        var villeSelect = jQuery('#sortie_ville');
        if (villeSelect !== null) {
            jQuery(document).ready(function () {
                // Récupérer les éléments HTML des champs Ville et Lieu
                var villeSelect = jQuery('#sortie_ville');
                var lieuSelect = jQuery('#sortie_lieu');

                // Écouter l'événement de changement de valeur du champ Ville
                villeSelect.change(function () {
                    var villeId = jQuery(this).val();

                    // Envoyer une requête AJAX pour récupérer les lieux correspondants à la ville sélectionnée
                    jQuery.ajax({
                        url: '{{ path('ville_recuperer_lieux') }}',
                        type: 'GET',
                        data: {villeId: villeId},
                        dataType: 'json',
                        success: function (response) {
                            // Effacer les options actuelles du champ Lieu
                            lieuSelect.empty();

                            // Ajouter les nouvelles options basées sur la réponse de la requête AJAX
                            response.forEach(function (lieu) {
                                lieuSelect.append('<option value="' + lieu.id + '">' + lieu.nom + '</option>');
                                document.getElementById("codePost").innerHTML = "Code postal : " + lieu.codePostal;
                            });
                        },
                        error: function () {
                            // Gérer les erreurs de la requête AJAX si nécessaire
                        }
                    });
                });

                lieuSelect.change(function () {
                    var lieuId = jQuery(this).val();

                    // Envoyer une requête AJAX pour récupérer les détails du lieu sélectionné
                    jQuery.ajax({
                        url: '{{ path('lieu_recuperer_rue') }}',
                        type: 'GET',
                        data: {lieuId: lieuId},
                        dataType: 'json',
                        success: function (response) {
                            // Mettre à jour la valeur de la rue avec le détail du lieu sélectionné
                            var rueInput = jQuery('#sortie_rue');
                            rueInput.val(response.rue);
                            document.getElementById("rueInput").innerHTML = "Rue : " + response.rue;
                            var codePost = document.getElementById("codePost").innerHTML
                            var numeroCodePostal = codePost.split(' ')[3];

                            fetchData(response.rue + "&postcode=" + numeroCodePostal);


                        },
                        error: function () {
                            // Gérer les erreurs de la requête AJAX si nécessaire
                        }
                    });
                });
            });
        }
    </script>

    <script>

        // Déclarez la variable map à l'extérieur de la fonction
        var map;
        var marker;

        function fetchData(searchText) {
            fetch(`https://api-adresse.data.gouv.fr/search/?q=${searchText}`)
                .then(response => response.json())
                .then(data => {
                    const latitude = data.features[0].geometry.coordinates[1];
                    const longitude = data.features[0].geometry.coordinates[0];

                    document.getElementById("latitude").innerHTML = latitude;
                    document.getElementById("longitude").innerHTML = longitude;

                    document.getElementById("latitude").value = latitude;
                    document.getElementById("longitude").value = longitude;

                    // Créer les éléments input
                    var latitudeInput = document.createElement("input");
                    latitudeInput.setAttribute("type", "hidden");
                    latitudeInput.setAttribute("name", "latitude");
                    latitudeInput.setAttribute("value", latitude);

                    var longitudeInput = document.createElement("input");
                    longitudeInput.setAttribute("type", "hidden");
                    longitudeInput.setAttribute("name", "longitude");
                    longitudeInput.setAttribute("value", longitude);

                    // Ajouter les éléments input au formulaire
                    document.getElementById("sortieForm").appendChild(latitudeInput);
                    document.getElementById("sortieForm").appendChild(longitudeInput);


                    if (!map) {
                        // Initialisez la carte Leaflet dans le conteneur 'map' uniquement si elle n'est pas déjà initialisée
                        map = L.map('map').setView([latitude, longitude], 13);

                        // Ajoutez une couche de tuiles (par exemple, OpenStreetMap)
                        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                            maxZoom: 19,
                            attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
                        }).addTo(map);
                    } else {
                        // Mettez simplement à jour la position de la carte si elle est déjà initialisée
                        map.setView([latitude, longitude], 13);
                    }
                    if (marker) {
                        marker.removeFrom(map)
                    }
                    // Possibilité d'ajouter un marker avec les longitudes et latitudes
                    marker = L.marker([latitude, longitude]).addTo(map);
                });
        }

    </script>
{% endblock %}